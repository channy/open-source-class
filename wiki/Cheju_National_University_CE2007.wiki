#summary 제주대학교 컴퓨터공학과
== 강의 소개 ==
오픈소스 개발은 비교적 쉽게 참여할 수 있으면서도 여러가지 형태의 진보된 개발 방법을 습득하고 연습할 수 있는 좋은 기회이자, 흥미를 느끼고 지속적으로 기여하는 경우 많은 경험을 할 수 있다. 일반적인 오픈소스 프로젝트들에 여러 형태로 기여하고 참여할 수 있는 방법과 그에 필요한 여러가지 기술들을 소개한다. 그리고, 실제로 관심 있는 오픈소스 프로젝트에 참여하여 실습해본다.

== 강의 방법 ==
 * 선수과목: 필수/없음, 권장/C프로그래밍,자료구조,시스템프로그래밍
 * 메일 주소: oss2007cnu@gmail.com
 * 성적평가방법
  * 중간(실기) 25%
  * 과제 50%
  * 퀴즈 2회 15%, 
  * 수업외 참여 10% (수업기간 내에 있었던 버그 보고 등의 관련 메일/URL을 제출)
== 수업 일정 (주별) ==
 # 오픈소스의 정의와 소개, 개요
  * Revolution OS 동영상 상영 (2시간)
 # 개발 과정 개요 
 # 
 # 버전 컨트롤 시스템: CVS와 Subversion 실습
 # 버그 트래킹 시스템: Bugzilla, Trac, GNATS, 메일로 보고하기 실습
 # 오픈 소스 라이선스
 # 오픈 소스의 특징적 버그 추적 기술, 패치 제출, 스타일의 관례
 #  More 관례: 빌드, 배포, 버전, 문서화, 기여자 참여 과정, 번역 등
 # 중간고사: (실습 시험) 버그 추적, 패치 제출, follow-up
 # 사례연구: 주요 오픈소스 프로젝트 2가지, 소규모 오픈소스 프로젝트 2가지
 # 프로젝트 시작 안내 및 진행 방법 설명
 # 진행 상황 발표: 대상 프로젝트 선정과 간단한 프로젝트 소개, 작업할 내용 소개
 # 진행 상황 발표 및 아이디어 교환: 작업할 내용의 1차 패치를 버그트래커에 제출한 후 그 내용을 소개 (11주 과제)
 # 진행 상황 발표: 다른 사람의 패치들에 follow-up한 다음에 개선된 패치를 제출한 후 그 내용을 소개 (12주 과제)
 # 진행 상황 발표: 11주에 제출한 자기의 패치에 대한 가급적이면 최종판의 개선된 버전을 제출한 뒤 소개 (13주 과제)
 # 프로젝트 최종평가: 자신이 제출한 패치를 적용한 프로그램 스냅샷과 가상의 릴리스 어나운스를 만들어서 제출.
 # (없음)
